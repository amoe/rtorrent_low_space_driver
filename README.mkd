Rtorrent low space driver.

This is designed for the following situation:

1.  You have a bunch of torrents you want to DL
2.  You have a server with a fast connection but small space
3.  You have another SSH-accessible remote host that is slow but has large space

It manages and rotates a directory of torrents.  Adds them to rtorrent
when they can fit.  Syncs completed files to a remote host once they
reach the target ratio.  Prioritizes the smallest torrents first.  You
can use it with unmanaged torrents but it won't factor these into
space calculations.  Once no more torrents will fit, it downloads
individual files within torrents and syncs these as well.  Only one
torrent can be handled in this mode.

Your rtorrent will need to be configured for XMLRPC access over SCGI.  To enable
this, add the following lines to `~/.rtorrent.rc`:

    network.scgi.open_local = /home/amoe/.rtorrent.sock
    encoding_list = UTF-8

You need the encoding specification in order to prevent problems when files in
torrents have non-ASCII names.  Obviously you can put the socket file wherever
you would like.

You need to create a config file under `~/.rtorrent_low_space_driver.cf`.  Base
it on this template:

	[main]
	managed_torrents_directory = /home/amoe/managed_torrents
	remote_host = somehost
	remote_path = /home/amoe/place-with-space
	space_limit = 3221225472
	required_ratio = 1.0
	socket_url = scgi:///home/amoe/.rtorrent.sock

All paths need to be absolute.  The value for `space_limit` is in bytes.  The
value for `socket_url` needs to match the value in `.rtorrent.rc`, but with the
`scgi://` prefix.

Run it from cron with a lock.  Every hour is quite appropriate.
Although the transfer will often take longer, so the lock is essential
if you don't want to fill up your process table with rsync instances.

    0 * * * *  lckdo /var/lock/rtorrent_low_space_driver.lock /usr/local/bin/rtorrent-low-space-driver

Many thanks to Roger Que for the SCGI module, and the authors of
Pyroscope for a bit of inspiration.

License GPLv2
